import java.io.*;
import java.util.*;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.filecache.DistributedCache;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.*;
import org.apache.hadoop.util.*;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
import org.apache.hadoop.mapreduce.lib.input.MultipleInputs;


public class MultiMapk
{


public static class Map1 extends Mapper<LongWritable, Text, Text, Text> 
{


public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException 
{
		String line = value.toString();
		String listv[]=line.split(",");
			context.write(new Text(listv[0]), value);



}

}

public static class Map2 extends Mapper<LongWritable, Text, Text, Text>
{


public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException
{
                String line = value.toString();
                String listv[]=line.split(",");
                        context.write(new Text(listv[2]), value);



}

}





public static void main(String args[]) throws Exception
{

System.out.println("Main started");

Configuration conf=new Configuration();
Job job=new Job(conf,"job1");

job.setInputFormatClass(TextInputFormat.class);
job.setOutputFormatClass(TextOutputFormat.class);


job.setOutputKeyClass(Text.class);
job.setOutputValueClass(Text.class);
//job.setOutputValueClass(IntWritable.class);

Path inputFilePath = new Path(args[0]);
Path inputFilePath1 = new Path(args[1]);
Path outputFilePath = new Path(args[2]);

//FileInputFormat.addInputPath(job, inputFilePath);
FileOutputFormat.setOutputPath(job, outputFilePath);


MultipleInputs.addInputPath(job, inputFilePath, TextInputFormat.class, Map1.class);
MultipleInputs.addInputPath(job, inputFilePath1, TextInputFormat.class, Map2.class);



//job.setMapperClass(Map1.class);
job.setJarByClass(MultiMapk.class);
//job.setNumReduceTasks(0);

job.waitForCompletion(true);

System.out.println("Main End");
}


}
