import java.io.*;
import java.util.*;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.filecache.DistributedCache;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.*;
import org.apache.hadoop.util.*;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;


public class MapOnly
{


public static class Map1 extends Mapper<LongWritable, Text, Text, IntWritable>
{


public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException
{
                //String line = value.toString();
                        context.write(value, new IntWritable(1));



}

}


public static void main(String args[]) throws Exception
{

System.out.println("Main started");

Configuration conf=new Configuration();
Job job=new Job(conf,"job1");

job.setInputFormatClass(TextInputFormat.class);
job.setOutputFormatClass(TextOutputFormat.class);


job.setOutputKeyClass(Text.class);
job.setOutputValueClass(IntWritable.class);

//Path inputFilePath = new Path(args[0]);
//Path outputFilePath = new Path(args[1]);


Path inputFilePath = new Path("/user/cloudera/input");
Path outputFilePath = new Path("/user/cloudera/output/ec1");



FileInputFormat.addInputPath(job, inputFilePath);
FileOutputFormat.setOutputPath(job, outputFilePath);


}
}

